-------------------------------------------------------------------------------
-- lgn

local lgn = {}

function lgn.exe(name)
    local target = {}

    return target
end

function lgn.shared(name)
    local st = {}
    return st
end

function lgn.static(name)
    local st = {}
    return st
end

local toolchain = {}

function toolchain.new(name)
    local tc = {}
    tc.name = name
    tc.tools = {}

    return tc
end

function toolchain.add_tool(self, tool)
    self.tools[tool.name] = tool
end

-- ninja syntax
local ns = {}

function ns.new(name)
    local nw = {}
    nw.name = name
    nw.lines = {}
    return nw
end

function ns.dump(self)
    return table.concat(self.lines, "\n")
end

function ns.add_comment(self, c)
    table.insert(self.lines, "# " .. c)
end

function ns.new_line(self, amount)
    for i = 1, amount do
        table.insert(self.lines, "")
    end
end

-------------------------------------------------------------------------------
-- util 

local function write_file(path, content)
    local f = io.open(path, "w")
    f:write(content)
    f:close()
end

local function main()
    local llab = lgn.exe("llab")
    local tc = lgn.toolchain("gcc")

    local bn = ns.new("build.ninja")
    ns.add_comment(bn, "This file is used to build llab.")
    ns.add_comment(bn, "It is generated by configure.lua.")
    ns.new_line(bn, 1)

    write_file("./out/" .. bn.name, ns.dump(bn))
end

main()